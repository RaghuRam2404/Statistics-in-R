load("ames_train.Rdata")
library(MASS)
library(dplyr)
library(ggplot2)
summary(ames_train)
str(summary(ames_train))
ames_sum_str <- str(summary(ames_train))
ames_sum_str
ames_sum_str <- summary(ames_train)
summary(ames_train)[0][1]
summary(ames_train)[0][2]
summary(ames_train)[1:7]
summary(ames_train)[1:2][1:7]
summary(ames_train)[1:3][1:7]
summary(ames_train)[1:7]
names(ames_train)
for(col in names(ames_train)){
print(summary(ames_train[col]))
}
for(col in names(ames_train)){
str(summary(ames_train[col]))
}
for(col in names(ames_train)){
for(var in (summary(ames_train[col]))){
if(var == "NA's"){
print(var)
}
}
}
)
for(col in names(ames_train)){
for(var in (summary(ames_train[col]))) {
if(var == "NA's"){
print(var)
}
}
}
)
for(col in names(ames_train)){
for(var in summary(ames_train[col])) {
if(var == "NA's"){
print(var)
}
}
}
_
for(col in names(ames_train)){
for(var1 in summary(ames_train[col])) {
}
}
_
for(col in names(ames_train)){
}
for(col in names(ames_train)){
for(var1 in summary(ames_train[col])) {
if(var1 == "NA's"){
print(var)
}
}
}
for(col in names(ames_train)){
for(var1 in summary(ames_train[col])) {
#if(var1 == "NA's"){
print(var)
#}
}
}
for(col in names(ames_train)){
summary(ames_train[col]) }
for(col in names(ames_train)){
summary(ames_train[col])
}
for(col in names(ames_train)){
print(col)
}
for(col in names(ames_train)){
print(summary(ames_train[col]))
}
for(col in names(ames_train)){
print(str(summary(ames_train[col]))) }
for(col in names(ames_train)){
print(str(summary(ames_train[col])))
print(names(summary(ames_train[col]))) }
for(col in names(ames_train)){
print("structure "+str(summary(ames_train[col])))
print("names "+names(summary(ames_train[col]))) }
for(col in names(ames_train)){
print("structure "+str(summary(ames_train[col]))) }
for(col in names(ames_train)){
print(str(summary(ames_train[col]))) }
for(col in names(ames_train)){
print(str(summary(ames_train[col][0]))) }
for(col in names(ames_train)){
print(str(summary(ames_train[col]))) }
for(col in names(ames_train)){
print(as.vector(summary(ames_train[col]))) }
for(col in names(ames_train)){
print(as.vector(summary(ames_train[col]))[0]) }
for(col in names(ames_train)){
print(as.vector(summary(ames_train[col]))) }
for(col in names(ames_train)){
print(names(as.vector(summary(ames_train[col])))) }
for(col in names(ames_train)){
print(as.vector(summary(ames_train[col]))) }
for(col in names(ames_train)){
print(length(as.vector(summary(ames_train[col])))) }
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in data){
print(data)
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
print(data)
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
print(value)
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
print(startsWith(value, "NA's "))
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's ")){
print(col)
}
}
}
for(col in names(ames_train)){
print(summary(ames_train[col])) }
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(col)
}
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(strsplit(value,":"))
}
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(trim(strsplit(value,":")[1]))
}
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(gsub("(^[[:space:]]+|[[:space:]]+$)", "", strsplit(value,":")[1]))
}
}
}
trim <- function( x ) { gsub("(^[[:space:]]+|[[:space:]]+$)", "", x) }
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(trim(strsplit(value,":")[1]))
}
}
}
str_trim(" a")
trimws
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(trimws(strsplit(value,":")[1]))
}
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(trimws(strsplit(value,":")[1]))
}
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(trimws(strsplit(value,":")[[1]]))
}
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(trimws(strsplit(value,":")[[2]]))
}
}
}
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(str(strsplit(value,":")[[1]]))
}
}
}
test <- ""
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(str(strsplit(value,":")[[1]]))
test <- strsplit(value,":")
}
}
}
test
test <- ""
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(str(strsplit(value," ")[[2]]))
test <- strsplit(value," ")
}
}
}
test <- ""
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(str(strsplit(value," ")[[1]]))
test <- strsplit(value," ")
}
}
}
test
strsplit("NA's:971",":")
unlist(strsplit("NA's:971",":"))
str(unlist(strsplit("NA's:971",":")))
unlist(strsplit("NA's:971",":"))[1]
unlist(strsplit("NA's:971",":"))[2]
as.numeric(unlist(strsplit("NA's:971",":"))[2])
as.numeric(trimws(unlist(strsplit("NA's:971",":"))[2]))
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
print(as.numeric(trimws(unlist(strsplit(value,":"))[2])))
}
}
}
test = 0
max_na = ""
na_count = 0
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
max_na = col
for(value in dat){
if(startsWith(value, "NA's")){
tempcount = as.numeric(trimws(unlist(strsplit(value,":"))[2]))
if(tempcount > na_count){
na_count = tempcount
max_na = col
}
}
}
}
max_na = ""
na_count = 0
for(col in names(ames_train)){
dat = as.vector(summary(ames_train[col]))
for(value in dat){
if(startsWith(value, "NA's")){
tempcount = as.numeric(trimws(unlist(strsplit(value,":"))[2]))
if(tempcount > na_count){
na_count = tempcount
max_na = col
}
}
}
}
